// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages.proto

package veidemann_api

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CrawlExecutionStatus_State int32

const (
	CrawlExecutionStatus_UNDEFINED       CrawlExecutionStatus_State = 0
	CrawlExecutionStatus_CREATED         CrawlExecutionStatus_State = 1
	CrawlExecutionStatus_FETCHING        CrawlExecutionStatus_State = 2
	CrawlExecutionStatus_SLEEPING        CrawlExecutionStatus_State = 3
	CrawlExecutionStatus_FINISHED        CrawlExecutionStatus_State = 4
	CrawlExecutionStatus_ABORTED_TIMEOUT CrawlExecutionStatus_State = 5
	CrawlExecutionStatus_ABORTED_SIZE    CrawlExecutionStatus_State = 6
	CrawlExecutionStatus_ABORTED_MANUAL  CrawlExecutionStatus_State = 7
	CrawlExecutionStatus_FAILED          CrawlExecutionStatus_State = 8
	CrawlExecutionStatus_DIED            CrawlExecutionStatus_State = 9
)

var CrawlExecutionStatus_State_name = map[int32]string{
	0: "UNDEFINED",
	1: "CREATED",
	2: "FETCHING",
	3: "SLEEPING",
	4: "FINISHED",
	5: "ABORTED_TIMEOUT",
	6: "ABORTED_SIZE",
	7: "ABORTED_MANUAL",
	8: "FAILED",
	9: "DIED",
}

var CrawlExecutionStatus_State_value = map[string]int32{
	"UNDEFINED":       0,
	"CREATED":         1,
	"FETCHING":        2,
	"SLEEPING":        3,
	"FINISHED":        4,
	"ABORTED_TIMEOUT": 5,
	"ABORTED_SIZE":    6,
	"ABORTED_MANUAL":  7,
	"FAILED":          8,
	"DIED":            9,
}

func (x CrawlExecutionStatus_State) String() string {
	return proto.EnumName(CrawlExecutionStatus_State_name, int32(x))
}

func (CrawlExecutionStatus_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{0, 0}
}

type JobExecutionStatus_State int32

const (
	JobExecutionStatus_UNDEFINED      JobExecutionStatus_State = 0
	JobExecutionStatus_CREATED        JobExecutionStatus_State = 1
	JobExecutionStatus_RUNNING        JobExecutionStatus_State = 2
	JobExecutionStatus_FINISHED       JobExecutionStatus_State = 3
	JobExecutionStatus_ABORTED_MANUAL JobExecutionStatus_State = 4
	JobExecutionStatus_FAILED         JobExecutionStatus_State = 5
	JobExecutionStatus_DIED           JobExecutionStatus_State = 6
)

var JobExecutionStatus_State_name = map[int32]string{
	0: "UNDEFINED",
	1: "CREATED",
	2: "RUNNING",
	3: "FINISHED",
	4: "ABORTED_MANUAL",
	5: "FAILED",
	6: "DIED",
}

var JobExecutionStatus_State_value = map[string]int32{
	"UNDEFINED":      0,
	"CREATED":        1,
	"RUNNING":        2,
	"FINISHED":       3,
	"ABORTED_MANUAL": 4,
	"FAILED":         5,
	"DIED":           6,
}

func (x JobExecutionStatus_State) String() string {
	return proto.EnumName(JobExecutionStatus_State_name, int32(x))
}

func (JobExecutionStatus_State) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{2, 0}
}

// Metadata about a crawl execution.
// A crawl execution is the complete harvest of a seed as specified in the connected job's configuration.
type CrawlExecutionStatus struct {
	Id                   string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                CrawlExecutionStatus_State `protobuf:"varint,2,opt,name=state,proto3,enum=veidemann.api.CrawlExecutionStatus_State" json:"state,omitempty"`
	JobId                string                     `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	SeedId               string                     `protobuf:"bytes,4,opt,name=seed_id,json=seedId,proto3" json:"seed_id,omitempty"`
	Scope                *CrawlScope                `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	StartTime            *timestamp.Timestamp       `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp       `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	DocumentsCrawled     int64                      `protobuf:"varint,8,opt,name=documents_crawled,json=documentsCrawled,proto3" json:"documents_crawled,omitempty"`
	BytesCrawled         int64                      `protobuf:"varint,9,opt,name=bytes_crawled,json=bytesCrawled,proto3" json:"bytes_crawled,omitempty"`
	UrisCrawled          int64                      `protobuf:"varint,10,opt,name=uris_crawled,json=urisCrawled,proto3" json:"uris_crawled,omitempty"`
	DocumentsFailed      int64                      `protobuf:"varint,11,opt,name=documents_failed,json=documentsFailed,proto3" json:"documents_failed,omitempty"`
	DocumentsOutOfScope  int64                      `protobuf:"varint,12,opt,name=documents_out_of_scope,json=documentsOutOfScope,proto3" json:"documents_out_of_scope,omitempty"`
	DocumentsRetried     int64                      `protobuf:"varint,13,opt,name=documents_retried,json=documentsRetried,proto3" json:"documents_retried,omitempty"`
	DocumentsDenied      int64                      `protobuf:"varint,14,opt,name=documents_denied,json=documentsDenied,proto3" json:"documents_denied,omitempty"`
	LastChangeTime       *timestamp.Timestamp       `protobuf:"bytes,15,opt,name=last_change_time,json=lastChangeTime,proto3" json:"last_change_time,omitempty"`
	CreatedTime          *timestamp.Timestamp       `protobuf:"bytes,16,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	CurrentUriId         []string                   `protobuf:"bytes,20,rep,name=current_uri_id,json=currentUriId,proto3" json:"current_uri_id,omitempty"`
	JobExecutionId       string                     `protobuf:"bytes,21,opt,name=job_execution_id,json=jobExecutionId,proto3" json:"job_execution_id,omitempty"`
	Error                *Error                     `protobuf:"bytes,22,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *CrawlExecutionStatus) Reset()         { *m = CrawlExecutionStatus{} }
func (m *CrawlExecutionStatus) String() string { return proto.CompactTextString(m) }
func (*CrawlExecutionStatus) ProtoMessage()    {}
func (*CrawlExecutionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{0}
}

func (m *CrawlExecutionStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlExecutionStatus.Unmarshal(m, b)
}
func (m *CrawlExecutionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlExecutionStatus.Marshal(b, m, deterministic)
}
func (m *CrawlExecutionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlExecutionStatus.Merge(m, src)
}
func (m *CrawlExecutionStatus) XXX_Size() int {
	return xxx_messageInfo_CrawlExecutionStatus.Size(m)
}
func (m *CrawlExecutionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlExecutionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlExecutionStatus proto.InternalMessageInfo

func (m *CrawlExecutionStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CrawlExecutionStatus) GetState() CrawlExecutionStatus_State {
	if m != nil {
		return m.State
	}
	return CrawlExecutionStatus_UNDEFINED
}

func (m *CrawlExecutionStatus) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *CrawlExecutionStatus) GetSeedId() string {
	if m != nil {
		return m.SeedId
	}
	return ""
}

func (m *CrawlExecutionStatus) GetScope() *CrawlScope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (m *CrawlExecutionStatus) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *CrawlExecutionStatus) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *CrawlExecutionStatus) GetDocumentsCrawled() int64 {
	if m != nil {
		return m.DocumentsCrawled
	}
	return 0
}

func (m *CrawlExecutionStatus) GetBytesCrawled() int64 {
	if m != nil {
		return m.BytesCrawled
	}
	return 0
}

func (m *CrawlExecutionStatus) GetUrisCrawled() int64 {
	if m != nil {
		return m.UrisCrawled
	}
	return 0
}

func (m *CrawlExecutionStatus) GetDocumentsFailed() int64 {
	if m != nil {
		return m.DocumentsFailed
	}
	return 0
}

func (m *CrawlExecutionStatus) GetDocumentsOutOfScope() int64 {
	if m != nil {
		return m.DocumentsOutOfScope
	}
	return 0
}

func (m *CrawlExecutionStatus) GetDocumentsRetried() int64 {
	if m != nil {
		return m.DocumentsRetried
	}
	return 0
}

func (m *CrawlExecutionStatus) GetDocumentsDenied() int64 {
	if m != nil {
		return m.DocumentsDenied
	}
	return 0
}

func (m *CrawlExecutionStatus) GetLastChangeTime() *timestamp.Timestamp {
	if m != nil {
		return m.LastChangeTime
	}
	return nil
}

func (m *CrawlExecutionStatus) GetCreatedTime() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedTime
	}
	return nil
}

func (m *CrawlExecutionStatus) GetCurrentUriId() []string {
	if m != nil {
		return m.CurrentUriId
	}
	return nil
}

func (m *CrawlExecutionStatus) GetJobExecutionId() string {
	if m != nil {
		return m.JobExecutionId
	}
	return ""
}

func (m *CrawlExecutionStatus) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type CrawlExecutionStatusChange struct {
	Id                     string                     `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	State                  CrawlExecutionStatus_State `protobuf:"varint,2,opt,name=state,proto3,enum=veidemann.api.CrawlExecutionStatus_State" json:"state,omitempty"`
	EndTime                *timestamp.Timestamp       `protobuf:"bytes,4,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	AddDocumentsCrawled    int64                      `protobuf:"varint,5,opt,name=add_documents_crawled,json=addDocumentsCrawled,proto3" json:"add_documents_crawled,omitempty"`
	AddBytesCrawled        int64                      `protobuf:"varint,6,opt,name=add_bytes_crawled,json=addBytesCrawled,proto3" json:"add_bytes_crawled,omitempty"`
	AddUrisCrawled         int64                      `protobuf:"varint,7,opt,name=add_uris_crawled,json=addUrisCrawled,proto3" json:"add_uris_crawled,omitempty"`
	AddDocumentsFailed     int64                      `protobuf:"varint,8,opt,name=add_documents_failed,json=addDocumentsFailed,proto3" json:"add_documents_failed,omitempty"`
	AddDocumentsOutOfScope int64                      `protobuf:"varint,9,opt,name=add_documents_out_of_scope,json=addDocumentsOutOfScope,proto3" json:"add_documents_out_of_scope,omitempty"`
	AddDocumentsRetried    int64                      `protobuf:"varint,10,opt,name=add_documents_retried,json=addDocumentsRetried,proto3" json:"add_documents_retried,omitempty"`
	AddDocumentsDenied     int64                      `protobuf:"varint,11,opt,name=add_documents_denied,json=addDocumentsDenied,proto3" json:"add_documents_denied,omitempty"`
	AddCurrentUri          *QueuedUri                 `protobuf:"bytes,12,opt,name=add_current_uri,json=addCurrentUri,proto3" json:"add_current_uri,omitempty"`
	DeleteCurrentUri       *QueuedUri                 `protobuf:"bytes,13,opt,name=delete_current_uri,json=deleteCurrentUri,proto3" json:"delete_current_uri,omitempty"`
	Error                  *Error                     `protobuf:"bytes,14,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}                   `json:"-"`
	XXX_unrecognized       []byte                     `json:"-"`
	XXX_sizecache          int32                      `json:"-"`
}

func (m *CrawlExecutionStatusChange) Reset()         { *m = CrawlExecutionStatusChange{} }
func (m *CrawlExecutionStatusChange) String() string { return proto.CompactTextString(m) }
func (*CrawlExecutionStatusChange) ProtoMessage()    {}
func (*CrawlExecutionStatusChange) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{1}
}

func (m *CrawlExecutionStatusChange) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlExecutionStatusChange.Unmarshal(m, b)
}
func (m *CrawlExecutionStatusChange) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlExecutionStatusChange.Marshal(b, m, deterministic)
}
func (m *CrawlExecutionStatusChange) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlExecutionStatusChange.Merge(m, src)
}
func (m *CrawlExecutionStatusChange) XXX_Size() int {
	return xxx_messageInfo_CrawlExecutionStatusChange.Size(m)
}
func (m *CrawlExecutionStatusChange) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlExecutionStatusChange.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlExecutionStatusChange proto.InternalMessageInfo

func (m *CrawlExecutionStatusChange) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CrawlExecutionStatusChange) GetState() CrawlExecutionStatus_State {
	if m != nil {
		return m.State
	}
	return CrawlExecutionStatus_UNDEFINED
}

func (m *CrawlExecutionStatusChange) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *CrawlExecutionStatusChange) GetAddDocumentsCrawled() int64 {
	if m != nil {
		return m.AddDocumentsCrawled
	}
	return 0
}

func (m *CrawlExecutionStatusChange) GetAddBytesCrawled() int64 {
	if m != nil {
		return m.AddBytesCrawled
	}
	return 0
}

func (m *CrawlExecutionStatusChange) GetAddUrisCrawled() int64 {
	if m != nil {
		return m.AddUrisCrawled
	}
	return 0
}

func (m *CrawlExecutionStatusChange) GetAddDocumentsFailed() int64 {
	if m != nil {
		return m.AddDocumentsFailed
	}
	return 0
}

func (m *CrawlExecutionStatusChange) GetAddDocumentsOutOfScope() int64 {
	if m != nil {
		return m.AddDocumentsOutOfScope
	}
	return 0
}

func (m *CrawlExecutionStatusChange) GetAddDocumentsRetried() int64 {
	if m != nil {
		return m.AddDocumentsRetried
	}
	return 0
}

func (m *CrawlExecutionStatusChange) GetAddDocumentsDenied() int64 {
	if m != nil {
		return m.AddDocumentsDenied
	}
	return 0
}

func (m *CrawlExecutionStatusChange) GetAddCurrentUri() *QueuedUri {
	if m != nil {
		return m.AddCurrentUri
	}
	return nil
}

func (m *CrawlExecutionStatusChange) GetDeleteCurrentUri() *QueuedUri {
	if m != nil {
		return m.DeleteCurrentUri
	}
	return nil
}

func (m *CrawlExecutionStatusChange) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

// Metadata about an execution of a job.
// A job execution is the sum of all crawl executions for a job at a specific time.
type JobExecutionStatus struct {
	Id                   string                   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	JobId                string                   `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	State                JobExecutionStatus_State `protobuf:"varint,3,opt,name=state,proto3,enum=veidemann.api.JobExecutionStatus_State" json:"state,omitempty"`
	ExecutionsState      map[string]int32         `protobuf:"bytes,4,rep,name=executions_state,json=executionsState,proto3" json:"executions_state,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	StartTime            *timestamp.Timestamp     `protobuf:"bytes,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *timestamp.Timestamp     `protobuf:"bytes,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	DocumentsCrawled     int64                    `protobuf:"varint,8,opt,name=documents_crawled,json=documentsCrawled,proto3" json:"documents_crawled,omitempty"`
	BytesCrawled         int64                    `protobuf:"varint,9,opt,name=bytes_crawled,json=bytesCrawled,proto3" json:"bytes_crawled,omitempty"`
	UrisCrawled          int64                    `protobuf:"varint,10,opt,name=uris_crawled,json=urisCrawled,proto3" json:"uris_crawled,omitempty"`
	DocumentsFailed      int64                    `protobuf:"varint,11,opt,name=documents_failed,json=documentsFailed,proto3" json:"documents_failed,omitempty"`
	DocumentsOutOfScope  int64                    `protobuf:"varint,12,opt,name=documents_out_of_scope,json=documentsOutOfScope,proto3" json:"documents_out_of_scope,omitempty"`
	DocumentsRetried     int64                    `protobuf:"varint,13,opt,name=documents_retried,json=documentsRetried,proto3" json:"documents_retried,omitempty"`
	DocumentsDenied      int64                    `protobuf:"varint,14,opt,name=documents_denied,json=documentsDenied,proto3" json:"documents_denied,omitempty"`
	Error                *Error                   `protobuf:"bytes,15,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *JobExecutionStatus) Reset()         { *m = JobExecutionStatus{} }
func (m *JobExecutionStatus) String() string { return proto.CompactTextString(m) }
func (*JobExecutionStatus) ProtoMessage()    {}
func (*JobExecutionStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{2}
}

func (m *JobExecutionStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobExecutionStatus.Unmarshal(m, b)
}
func (m *JobExecutionStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobExecutionStatus.Marshal(b, m, deterministic)
}
func (m *JobExecutionStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobExecutionStatus.Merge(m, src)
}
func (m *JobExecutionStatus) XXX_Size() int {
	return xxx_messageInfo_JobExecutionStatus.Size(m)
}
func (m *JobExecutionStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_JobExecutionStatus.DiscardUnknown(m)
}

var xxx_messageInfo_JobExecutionStatus proto.InternalMessageInfo

func (m *JobExecutionStatus) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *JobExecutionStatus) GetJobId() string {
	if m != nil {
		return m.JobId
	}
	return ""
}

func (m *JobExecutionStatus) GetState() JobExecutionStatus_State {
	if m != nil {
		return m.State
	}
	return JobExecutionStatus_UNDEFINED
}

func (m *JobExecutionStatus) GetExecutionsState() map[string]int32 {
	if m != nil {
		return m.ExecutionsState
	}
	return nil
}

func (m *JobExecutionStatus) GetStartTime() *timestamp.Timestamp {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *JobExecutionStatus) GetEndTime() *timestamp.Timestamp {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *JobExecutionStatus) GetDocumentsCrawled() int64 {
	if m != nil {
		return m.DocumentsCrawled
	}
	return 0
}

func (m *JobExecutionStatus) GetBytesCrawled() int64 {
	if m != nil {
		return m.BytesCrawled
	}
	return 0
}

func (m *JobExecutionStatus) GetUrisCrawled() int64 {
	if m != nil {
		return m.UrisCrawled
	}
	return 0
}

func (m *JobExecutionStatus) GetDocumentsFailed() int64 {
	if m != nil {
		return m.DocumentsFailed
	}
	return 0
}

func (m *JobExecutionStatus) GetDocumentsOutOfScope() int64 {
	if m != nil {
		return m.DocumentsOutOfScope
	}
	return 0
}

func (m *JobExecutionStatus) GetDocumentsRetried() int64 {
	if m != nil {
		return m.DocumentsRetried
	}
	return 0
}

func (m *JobExecutionStatus) GetDocumentsDenied() int64 {
	if m != nil {
		return m.DocumentsDenied
	}
	return 0
}

func (m *JobExecutionStatus) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type CrawlLog struct {
	WarcId       string               `protobuf:"bytes,1,opt,name=warc_id,json=warcId,proto3" json:"warc_id,omitempty"`
	TimeStamp    *timestamp.Timestamp `protobuf:"bytes,2,opt,name=time_stamp,json=timeStamp,proto3" json:"time_stamp,omitempty"`
	Surt         string               `protobuf:"bytes,3,opt,name=surt,proto3" json:"surt,omitempty"`
	StatusCode   int32                `protobuf:"varint,4,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Size         int64                `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`
	RequestedUri string               `protobuf:"bytes,6,opt,name=requested_uri,json=requestedUri,proto3" json:"requested_uri,omitempty"`
	ResponseUri  string               `protobuf:"bytes,7,opt,name=response_uri,json=responseUri,proto3" json:"response_uri,omitempty"`
	// *
	// Get the discoveryPath,
	//  R - Redirect
	//  E - Embed
	//  X - Speculative embed (aggressive/Javascript link extraction)
	//  L - Link
	//  P - Prerequisite (as for DNS or robots.txt before another URI)
	DiscoveryPath        string               `protobuf:"bytes,8,opt,name=discovery_path,json=discoveryPath,proto3" json:"discovery_path,omitempty"`
	Referrer             string               `protobuf:"bytes,9,opt,name=referrer,proto3" json:"referrer,omitempty"`
	ContentType          string               `protobuf:"bytes,10,opt,name=content_type,json=contentType,proto3" json:"content_type,omitempty"`
	FetchTimeStamp       *timestamp.Timestamp `protobuf:"bytes,11,opt,name=fetch_time_stamp,json=fetchTimeStamp,proto3" json:"fetch_time_stamp,omitempty"`
	FetchTimeMs          int64                `protobuf:"varint,12,opt,name=fetch_time_ms,json=fetchTimeMs,proto3" json:"fetch_time_ms,omitempty"`
	BlockDigest          string               `protobuf:"bytes,13,opt,name=block_digest,json=blockDigest,proto3" json:"block_digest,omitempty"`
	PayloadDigest        string               `protobuf:"bytes,14,opt,name=payload_digest,json=payloadDigest,proto3" json:"payload_digest,omitempty"`
	StorageRef           string               `protobuf:"bytes,15,opt,name=storage_ref,json=storageRef,proto3" json:"storage_ref,omitempty"`
	RecordType           string               `protobuf:"bytes,16,opt,name=record_type,json=recordType,proto3" json:"record_type,omitempty"`
	WarcRefersTo         string               `protobuf:"bytes,17,opt,name=warc_refers_to,json=warcRefersTo,proto3" json:"warc_refers_to,omitempty"`
	IpAddress            string               `protobuf:"bytes,18,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	ExecutionId          string               `protobuf:"bytes,19,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Retries              int32                `protobuf:"varint,20,opt,name=retries,proto3" json:"retries,omitempty"`
	Error                *Error               `protobuf:"bytes,21,opt,name=error,proto3" json:"error,omitempty"`
	JobExecutionId       string               `protobuf:"bytes,22,opt,name=job_execution_id,json=jobExecutionId,proto3" json:"job_execution_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CrawlLog) Reset()         { *m = CrawlLog{} }
func (m *CrawlLog) String() string { return proto.CompactTextString(m) }
func (*CrawlLog) ProtoMessage()    {}
func (*CrawlLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{3}
}

func (m *CrawlLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlLog.Unmarshal(m, b)
}
func (m *CrawlLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlLog.Marshal(b, m, deterministic)
}
func (m *CrawlLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlLog.Merge(m, src)
}
func (m *CrawlLog) XXX_Size() int {
	return xxx_messageInfo_CrawlLog.Size(m)
}
func (m *CrawlLog) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlLog.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlLog proto.InternalMessageInfo

func (m *CrawlLog) GetWarcId() string {
	if m != nil {
		return m.WarcId
	}
	return ""
}

func (m *CrawlLog) GetTimeStamp() *timestamp.Timestamp {
	if m != nil {
		return m.TimeStamp
	}
	return nil
}

func (m *CrawlLog) GetSurt() string {
	if m != nil {
		return m.Surt
	}
	return ""
}

func (m *CrawlLog) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *CrawlLog) GetSize() int64 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *CrawlLog) GetRequestedUri() string {
	if m != nil {
		return m.RequestedUri
	}
	return ""
}

func (m *CrawlLog) GetResponseUri() string {
	if m != nil {
		return m.ResponseUri
	}
	return ""
}

func (m *CrawlLog) GetDiscoveryPath() string {
	if m != nil {
		return m.DiscoveryPath
	}
	return ""
}

func (m *CrawlLog) GetReferrer() string {
	if m != nil {
		return m.Referrer
	}
	return ""
}

func (m *CrawlLog) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *CrawlLog) GetFetchTimeStamp() *timestamp.Timestamp {
	if m != nil {
		return m.FetchTimeStamp
	}
	return nil
}

func (m *CrawlLog) GetFetchTimeMs() int64 {
	if m != nil {
		return m.FetchTimeMs
	}
	return 0
}

func (m *CrawlLog) GetBlockDigest() string {
	if m != nil {
		return m.BlockDigest
	}
	return ""
}

func (m *CrawlLog) GetPayloadDigest() string {
	if m != nil {
		return m.PayloadDigest
	}
	return ""
}

func (m *CrawlLog) GetStorageRef() string {
	if m != nil {
		return m.StorageRef
	}
	return ""
}

func (m *CrawlLog) GetRecordType() string {
	if m != nil {
		return m.RecordType
	}
	return ""
}

func (m *CrawlLog) GetWarcRefersTo() string {
	if m != nil {
		return m.WarcRefersTo
	}
	return ""
}

func (m *CrawlLog) GetIpAddress() string {
	if m != nil {
		return m.IpAddress
	}
	return ""
}

func (m *CrawlLog) GetExecutionId() string {
	if m != nil {
		return m.ExecutionId
	}
	return ""
}

func (m *CrawlLog) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *CrawlLog) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *CrawlLog) GetJobExecutionId() string {
	if m != nil {
		return m.JobExecutionId
	}
	return ""
}

// Log for each page including discovered resources and links
type PageLog struct {
	WarcId               string              `protobuf:"bytes,1,opt,name=warc_id,json=warcId,proto3" json:"warc_id,omitempty"`
	Uri                  string              `protobuf:"bytes,2,opt,name=uri,proto3" json:"uri,omitempty"`
	ExecutionId          string              `protobuf:"bytes,3,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Referrer             string              `protobuf:"bytes,4,opt,name=referrer,proto3" json:"referrer,omitempty"`
	JobExecutionId       string              `protobuf:"bytes,5,opt,name=job_execution_id,json=jobExecutionId,proto3" json:"job_execution_id,omitempty"`
	Resource             []*PageLog_Resource `protobuf:"bytes,10,rep,name=resource,proto3" json:"resource,omitempty"`
	Outlink              []string            `protobuf:"bytes,11,rep,name=outlink,proto3" json:"outlink,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PageLog) Reset()         { *m = PageLog{} }
func (m *PageLog) String() string { return proto.CompactTextString(m) }
func (*PageLog) ProtoMessage()    {}
func (*PageLog) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{4}
}

func (m *PageLog) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageLog.Unmarshal(m, b)
}
func (m *PageLog) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageLog.Marshal(b, m, deterministic)
}
func (m *PageLog) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageLog.Merge(m, src)
}
func (m *PageLog) XXX_Size() int {
	return xxx_messageInfo_PageLog.Size(m)
}
func (m *PageLog) XXX_DiscardUnknown() {
	xxx_messageInfo_PageLog.DiscardUnknown(m)
}

var xxx_messageInfo_PageLog proto.InternalMessageInfo

func (m *PageLog) GetWarcId() string {
	if m != nil {
		return m.WarcId
	}
	return ""
}

func (m *PageLog) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *PageLog) GetExecutionId() string {
	if m != nil {
		return m.ExecutionId
	}
	return ""
}

func (m *PageLog) GetReferrer() string {
	if m != nil {
		return m.Referrer
	}
	return ""
}

func (m *PageLog) GetJobExecutionId() string {
	if m != nil {
		return m.JobExecutionId
	}
	return ""
}

func (m *PageLog) GetResource() []*PageLog_Resource {
	if m != nil {
		return m.Resource
	}
	return nil
}

func (m *PageLog) GetOutlink() []string {
	if m != nil {
		return m.Outlink
	}
	return nil
}

// A resource used to complete a page. It might be embedded images, javascripts, stylesheets etc.
type PageLog_Resource struct {
	Uri                  string   `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	FromCache            bool     `protobuf:"varint,2,opt,name=from_cache,json=fromCache,proto3" json:"from_cache,omitempty"`
	Renderable           bool     `protobuf:"varint,3,opt,name=renderable,proto3" json:"renderable,omitempty"`
	ResourceType         string   `protobuf:"bytes,4,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`
	MimeType             string   `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type,omitempty"`
	StatusCode           int32    `protobuf:"varint,6,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	DiscoveryPath        string   `protobuf:"bytes,7,opt,name=discovery_path,json=discoveryPath,proto3" json:"discovery_path,omitempty"`
	WarcId               string   `protobuf:"bytes,8,opt,name=warc_id,json=warcId,proto3" json:"warc_id,omitempty"`
	Referrer             string   `protobuf:"bytes,9,opt,name=referrer,proto3" json:"referrer,omitempty"`
	Error                *Error   `protobuf:"bytes,10,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PageLog_Resource) Reset()         { *m = PageLog_Resource{} }
func (m *PageLog_Resource) String() string { return proto.CompactTextString(m) }
func (*PageLog_Resource) ProtoMessage()    {}
func (*PageLog_Resource) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{4, 0}
}

func (m *PageLog_Resource) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PageLog_Resource.Unmarshal(m, b)
}
func (m *PageLog_Resource) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PageLog_Resource.Marshal(b, m, deterministic)
}
func (m *PageLog_Resource) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PageLog_Resource.Merge(m, src)
}
func (m *PageLog_Resource) XXX_Size() int {
	return xxx_messageInfo_PageLog_Resource.Size(m)
}
func (m *PageLog_Resource) XXX_DiscardUnknown() {
	xxx_messageInfo_PageLog_Resource.DiscardUnknown(m)
}

var xxx_messageInfo_PageLog_Resource proto.InternalMessageInfo

func (m *PageLog_Resource) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *PageLog_Resource) GetFromCache() bool {
	if m != nil {
		return m.FromCache
	}
	return false
}

func (m *PageLog_Resource) GetRenderable() bool {
	if m != nil {
		return m.Renderable
	}
	return false
}

func (m *PageLog_Resource) GetResourceType() string {
	if m != nil {
		return m.ResourceType
	}
	return ""
}

func (m *PageLog_Resource) GetMimeType() string {
	if m != nil {
		return m.MimeType
	}
	return ""
}

func (m *PageLog_Resource) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *PageLog_Resource) GetDiscoveryPath() string {
	if m != nil {
		return m.DiscoveryPath
	}
	return ""
}

func (m *PageLog_Resource) GetWarcId() string {
	if m != nil {
		return m.WarcId
	}
	return ""
}

func (m *PageLog_Resource) GetReferrer() string {
	if m != nil {
		return m.Referrer
	}
	return ""
}

func (m *PageLog_Resource) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type CrawledContent struct {
	Digest               string   `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
	WarcId               string   `protobuf:"bytes,2,opt,name=warc_id,json=warcId,proto3" json:"warc_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrawledContent) Reset()         { *m = CrawledContent{} }
func (m *CrawledContent) String() string { return proto.CompactTextString(m) }
func (*CrawledContent) ProtoMessage()    {}
func (*CrawledContent) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{5}
}

func (m *CrawledContent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawledContent.Unmarshal(m, b)
}
func (m *CrawledContent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawledContent.Marshal(b, m, deterministic)
}
func (m *CrawledContent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawledContent.Merge(m, src)
}
func (m *CrawledContent) XXX_Size() int {
	return xxx_messageInfo_CrawledContent.Size(m)
}
func (m *CrawledContent) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawledContent.DiscardUnknown(m)
}

var xxx_messageInfo_CrawledContent proto.InternalMessageInfo

func (m *CrawledContent) GetDigest() string {
	if m != nil {
		return m.Digest
	}
	return ""
}

func (m *CrawledContent) GetWarcId() string {
	if m != nil {
		return m.WarcId
	}
	return ""
}

type ExtractedText struct {
	WarcId               string   `protobuf:"bytes,1,opt,name=warc_id,json=warcId,proto3" json:"warc_id,omitempty"`
	Text                 string   `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	SentenceCount        int64    `protobuf:"varint,3,opt,name=sentence_count,json=sentenceCount,proto3" json:"sentence_count,omitempty"`
	WordCount            int64    `protobuf:"varint,4,opt,name=word_count,json=wordCount,proto3" json:"word_count,omitempty"`
	LongWordCount        int64    `protobuf:"varint,5,opt,name=long_word_count,json=longWordCount,proto3" json:"long_word_count,omitempty"`
	CharacterCount       int64    `protobuf:"varint,6,opt,name=character_count,json=characterCount,proto3" json:"character_count,omitempty"`
	Lix                  int64    `protobuf:"varint,7,opt,name=lix,proto3" json:"lix,omitempty"`
	Language             string   `protobuf:"bytes,8,opt,name=language,proto3" json:"language,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ExtractedText) Reset()         { *m = ExtractedText{} }
func (m *ExtractedText) String() string { return proto.CompactTextString(m) }
func (*ExtractedText) ProtoMessage()    {}
func (*ExtractedText) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{6}
}

func (m *ExtractedText) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExtractedText.Unmarshal(m, b)
}
func (m *ExtractedText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExtractedText.Marshal(b, m, deterministic)
}
func (m *ExtractedText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExtractedText.Merge(m, src)
}
func (m *ExtractedText) XXX_Size() int {
	return xxx_messageInfo_ExtractedText.Size(m)
}
func (m *ExtractedText) XXX_DiscardUnknown() {
	xxx_messageInfo_ExtractedText.DiscardUnknown(m)
}

var xxx_messageInfo_ExtractedText proto.InternalMessageInfo

func (m *ExtractedText) GetWarcId() string {
	if m != nil {
		return m.WarcId
	}
	return ""
}

func (m *ExtractedText) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ExtractedText) GetSentenceCount() int64 {
	if m != nil {
		return m.SentenceCount
	}
	return 0
}

func (m *ExtractedText) GetWordCount() int64 {
	if m != nil {
		return m.WordCount
	}
	return 0
}

func (m *ExtractedText) GetLongWordCount() int64 {
	if m != nil {
		return m.LongWordCount
	}
	return 0
}

func (m *ExtractedText) GetCharacterCount() int64 {
	if m != nil {
		return m.CharacterCount
	}
	return 0
}

func (m *ExtractedText) GetLix() int64 {
	if m != nil {
		return m.Lix
	}
	return 0
}

func (m *ExtractedText) GetLanguage() string {
	if m != nil {
		return m.Language
	}
	return ""
}

type CrawlHostGroup struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PolitenessId         string               `protobuf:"bytes,2,opt,name=politeness_id,json=politenessId,proto3" json:"politeness_id,omitempty"`
	NextFetchTime        *timestamp.Timestamp `protobuf:"bytes,3,opt,name=next_fetch_time,json=nextFetchTime,proto3" json:"next_fetch_time,omitempty"`
	Busy                 bool                 `protobuf:"varint,4,opt,name=busy,proto3" json:"busy,omitempty"`
	QueuedUriCount       int64                `protobuf:"varint,5,opt,name=queued_uri_count,json=queuedUriCount,proto3" json:"queued_uri_count,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CrawlHostGroup) Reset()         { *m = CrawlHostGroup{} }
func (m *CrawlHostGroup) String() string { return proto.CompactTextString(m) }
func (*CrawlHostGroup) ProtoMessage()    {}
func (*CrawlHostGroup) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{7}
}

func (m *CrawlHostGroup) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlHostGroup.Unmarshal(m, b)
}
func (m *CrawlHostGroup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlHostGroup.Marshal(b, m, deterministic)
}
func (m *CrawlHostGroup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlHostGroup.Merge(m, src)
}
func (m *CrawlHostGroup) XXX_Size() int {
	return xxx_messageInfo_CrawlHostGroup.Size(m)
}
func (m *CrawlHostGroup) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlHostGroup.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlHostGroup proto.InternalMessageInfo

func (m *CrawlHostGroup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CrawlHostGroup) GetPolitenessId() string {
	if m != nil {
		return m.PolitenessId
	}
	return ""
}

func (m *CrawlHostGroup) GetNextFetchTime() *timestamp.Timestamp {
	if m != nil {
		return m.NextFetchTime
	}
	return nil
}

func (m *CrawlHostGroup) GetBusy() bool {
	if m != nil {
		return m.Busy
	}
	return false
}

func (m *CrawlHostGroup) GetQueuedUriCount() int64 {
	if m != nil {
		return m.QueuedUriCount
	}
	return 0
}

type Error struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Detail               string   `protobuf:"bytes,3,opt,name=detail,proto3" json:"detail,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{8}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func (m *Error) GetDetail() string {
	if m != nil {
		return m.Detail
	}
	return ""
}

type QueuedUri struct {
	Id                  string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExecutionId         string               `protobuf:"bytes,2,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	DiscoveredTimeStamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=discovered_time_stamp,json=discoveredTimeStamp,proto3" json:"discovered_time_stamp,omitempty"`
	// Sequence number to order the fetch of uris from a seed
	Sequence int64  `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Uri      string `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	Surt     string `protobuf:"bytes,6,opt,name=surt,proto3" json:"surt,omitempty"`
	Ip       string `protobuf:"bytes,7,opt,name=ip,proto3" json:"ip,omitempty"`
	// *
	// Get the discoveryPath,
	//  R - Redirect
	//  E - Embed
	//  X - Speculative embed (aggressive/Javascript link extraction)
	//  L - Link
	//  P - Prerequisite (as for DNS or robots.txt before another URI)
	DiscoveryPath          string               `protobuf:"bytes,8,opt,name=discovery_path,json=discoveryPath,proto3" json:"discovery_path,omitempty"`
	Referrer               string               `protobuf:"bytes,9,opt,name=referrer,proto3" json:"referrer,omitempty"`
	Cookies                []*Cookie            `protobuf:"bytes,10,rep,name=cookies,proto3" json:"cookies,omitempty"`
	PageFetchTimeMs        int64                `protobuf:"varint,11,opt,name=page_fetch_time_ms,json=pageFetchTimeMs,proto3" json:"page_fetch_time_ms,omitempty"`
	Retries                int32                `protobuf:"varint,12,opt,name=retries,proto3" json:"retries,omitempty"`
	EarliestFetchTimeStamp *timestamp.Timestamp `protobuf:"bytes,13,opt,name=earliest_fetch_time_stamp,json=earliestFetchTimeStamp,proto3" json:"earliest_fetch_time_stamp,omitempty"`
	CrawlHostGroupId       string               `protobuf:"bytes,14,opt,name=crawl_host_group_id,json=crawlHostGroupId,proto3" json:"crawl_host_group_id,omitempty"`
	PolitenessId           string               `protobuf:"bytes,15,opt,name=politeness_id,json=politenessId,proto3" json:"politeness_id,omitempty"`
	Error                  *Error               `protobuf:"bytes,16,opt,name=error,proto3" json:"error,omitempty"`
	JobExecutionId         string               `protobuf:"bytes,17,opt,name=job_execution_id,json=jobExecutionId,proto3" json:"job_execution_id,omitempty"`
	Unresolved             bool                 `protobuf:"varint,18,opt,name=unresolved,proto3" json:"unresolved,omitempty"`
	FetchStartTimeStamp    *timestamp.Timestamp `protobuf:"bytes,19,opt,name=fetch_start_time_stamp,json=fetchStartTimeStamp,proto3" json:"fetch_start_time_stamp,omitempty"`
	// The weighting between jobs when two jobs compete on fetching resources from the same hosts.
	// Copied from CrawlConfig for efficiency.
	PriorityWeight       float64  `protobuf:"fixed64,20,opt,name=priority_weight,json=priorityWeight,proto3" json:"priority_weight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QueuedUri) Reset()         { *m = QueuedUri{} }
func (m *QueuedUri) String() string { return proto.CompactTextString(m) }
func (*QueuedUri) ProtoMessage()    {}
func (*QueuedUri) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{9}
}

func (m *QueuedUri) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QueuedUri.Unmarshal(m, b)
}
func (m *QueuedUri) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QueuedUri.Marshal(b, m, deterministic)
}
func (m *QueuedUri) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QueuedUri.Merge(m, src)
}
func (m *QueuedUri) XXX_Size() int {
	return xxx_messageInfo_QueuedUri.Size(m)
}
func (m *QueuedUri) XXX_DiscardUnknown() {
	xxx_messageInfo_QueuedUri.DiscardUnknown(m)
}

var xxx_messageInfo_QueuedUri proto.InternalMessageInfo

func (m *QueuedUri) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *QueuedUri) GetExecutionId() string {
	if m != nil {
		return m.ExecutionId
	}
	return ""
}

func (m *QueuedUri) GetDiscoveredTimeStamp() *timestamp.Timestamp {
	if m != nil {
		return m.DiscoveredTimeStamp
	}
	return nil
}

func (m *QueuedUri) GetSequence() int64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *QueuedUri) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *QueuedUri) GetSurt() string {
	if m != nil {
		return m.Surt
	}
	return ""
}

func (m *QueuedUri) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *QueuedUri) GetDiscoveryPath() string {
	if m != nil {
		return m.DiscoveryPath
	}
	return ""
}

func (m *QueuedUri) GetReferrer() string {
	if m != nil {
		return m.Referrer
	}
	return ""
}

func (m *QueuedUri) GetCookies() []*Cookie {
	if m != nil {
		return m.Cookies
	}
	return nil
}

func (m *QueuedUri) GetPageFetchTimeMs() int64 {
	if m != nil {
		return m.PageFetchTimeMs
	}
	return 0
}

func (m *QueuedUri) GetRetries() int32 {
	if m != nil {
		return m.Retries
	}
	return 0
}

func (m *QueuedUri) GetEarliestFetchTimeStamp() *timestamp.Timestamp {
	if m != nil {
		return m.EarliestFetchTimeStamp
	}
	return nil
}

func (m *QueuedUri) GetCrawlHostGroupId() string {
	if m != nil {
		return m.CrawlHostGroupId
	}
	return ""
}

func (m *QueuedUri) GetPolitenessId() string {
	if m != nil {
		return m.PolitenessId
	}
	return ""
}

func (m *QueuedUri) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *QueuedUri) GetJobExecutionId() string {
	if m != nil {
		return m.JobExecutionId
	}
	return ""
}

func (m *QueuedUri) GetUnresolved() bool {
	if m != nil {
		return m.Unresolved
	}
	return false
}

func (m *QueuedUri) GetFetchStartTimeStamp() *timestamp.Timestamp {
	if m != nil {
		return m.FetchStartTimeStamp
	}
	return nil
}

func (m *QueuedUri) GetPriorityWeight() float64 {
	if m != nil {
		return m.PriorityWeight
	}
	return 0
}

type Cookie struct {
	// Cookie name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Cookie value.
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	// Cookie domain.
	Domain string `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`
	// Cookie path.
	Path string `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	// Cookie expiration date as the number of seconds since the UNIX epoch.
	Expires float64 `protobuf:"fixed64,5,opt,name=expires,proto3" json:"expires,omitempty"`
	// Cookie size.
	Size int32 `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`
	// True if cookie is http-only.
	HttpOnly bool `protobuf:"varint,7,opt,name=http_only,json=httpOnly,proto3" json:"http_only,omitempty"`
	// True if cookie is secure.
	Secure bool `protobuf:"varint,8,opt,name=secure,proto3" json:"secure,omitempty"`
	// True in case of session cookie.
	Session bool `protobuf:"varint,9,opt,name=session,proto3" json:"session,omitempty"`
	// Cookie SameSite type.
	SameSite             string   `protobuf:"bytes,10,opt,name=same_site,json=sameSite,proto3" json:"same_site,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Cookie) Reset()         { *m = Cookie{} }
func (m *Cookie) String() string { return proto.CompactTextString(m) }
func (*Cookie) ProtoMessage()    {}
func (*Cookie) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{10}
}

func (m *Cookie) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Cookie.Unmarshal(m, b)
}
func (m *Cookie) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Cookie.Marshal(b, m, deterministic)
}
func (m *Cookie) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Cookie.Merge(m, src)
}
func (m *Cookie) XXX_Size() int {
	return xxx_messageInfo_Cookie.Size(m)
}
func (m *Cookie) XXX_DiscardUnknown() {
	xxx_messageInfo_Cookie.DiscardUnknown(m)
}

var xxx_messageInfo_Cookie proto.InternalMessageInfo

func (m *Cookie) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Cookie) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *Cookie) GetDomain() string {
	if m != nil {
		return m.Domain
	}
	return ""
}

func (m *Cookie) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Cookie) GetExpires() float64 {
	if m != nil {
		return m.Expires
	}
	return 0
}

func (m *Cookie) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Cookie) GetHttpOnly() bool {
	if m != nil {
		return m.HttpOnly
	}
	return false
}

func (m *Cookie) GetSecure() bool {
	if m != nil {
		return m.Secure
	}
	return false
}

func (m *Cookie) GetSession() bool {
	if m != nil {
		return m.Session
	}
	return false
}

func (m *Cookie) GetSameSite() string {
	if m != nil {
		return m.SameSite
	}
	return ""
}

type Screenshot struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ExecutionId          string   `protobuf:"bytes,2,opt,name=execution_id,json=executionId,proto3" json:"execution_id,omitempty"`
	Uri                  string   `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Img                  []byte   `protobuf:"bytes,4,opt,name=img,proto3" json:"img,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Screenshot) Reset()         { *m = Screenshot{} }
func (m *Screenshot) String() string { return proto.CompactTextString(m) }
func (*Screenshot) ProtoMessage()    {}
func (*Screenshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_4dc296cbfe5ffcd5, []int{11}
}

func (m *Screenshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Screenshot.Unmarshal(m, b)
}
func (m *Screenshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Screenshot.Marshal(b, m, deterministic)
}
func (m *Screenshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Screenshot.Merge(m, src)
}
func (m *Screenshot) XXX_Size() int {
	return xxx_messageInfo_Screenshot.Size(m)
}
func (m *Screenshot) XXX_DiscardUnknown() {
	xxx_messageInfo_Screenshot.DiscardUnknown(m)
}

var xxx_messageInfo_Screenshot proto.InternalMessageInfo

func (m *Screenshot) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Screenshot) GetExecutionId() string {
	if m != nil {
		return m.ExecutionId
	}
	return ""
}

func (m *Screenshot) GetUri() string {
	if m != nil {
		return m.Uri
	}
	return ""
}

func (m *Screenshot) GetImg() []byte {
	if m != nil {
		return m.Img
	}
	return nil
}

func init() {
	proto.RegisterEnum("veidemann.api.CrawlExecutionStatus_State", CrawlExecutionStatus_State_name, CrawlExecutionStatus_State_value)
	proto.RegisterEnum("veidemann.api.JobExecutionStatus_State", JobExecutionStatus_State_name, JobExecutionStatus_State_value)
	proto.RegisterType((*CrawlExecutionStatus)(nil), "veidemann.api.CrawlExecutionStatus")
	proto.RegisterType((*CrawlExecutionStatusChange)(nil), "veidemann.api.CrawlExecutionStatusChange")
	proto.RegisterType((*JobExecutionStatus)(nil), "veidemann.api.JobExecutionStatus")
	proto.RegisterMapType((map[string]int32)(nil), "veidemann.api.JobExecutionStatus.ExecutionsStateEntry")
	proto.RegisterType((*CrawlLog)(nil), "veidemann.api.CrawlLog")
	proto.RegisterType((*PageLog)(nil), "veidemann.api.PageLog")
	proto.RegisterType((*PageLog_Resource)(nil), "veidemann.api.PageLog.Resource")
	proto.RegisterType((*CrawledContent)(nil), "veidemann.api.CrawledContent")
	proto.RegisterType((*ExtractedText)(nil), "veidemann.api.ExtractedText")
	proto.RegisterType((*CrawlHostGroup)(nil), "veidemann.api.CrawlHostGroup")
	proto.RegisterType((*Error)(nil), "veidemann.api.Error")
	proto.RegisterType((*QueuedUri)(nil), "veidemann.api.QueuedUri")
	proto.RegisterType((*Cookie)(nil), "veidemann.api.Cookie")
	proto.RegisterType((*Screenshot)(nil), "veidemann.api.Screenshot")
}

func init() { proto.RegisterFile("messages.proto", fileDescriptor_4dc296cbfe5ffcd5) }

var fileDescriptor_4dc296cbfe5ffcd5 = []byte{
	// 2079 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x58, 0x4b, 0x73, 0xe3, 0xc6,
	0x11, 0x0e, 0xdf, 0x60, 0xf3, 0x21, 0xec, 0xe8, 0x61, 0x5a, 0x2e, 0xdb, 0x32, 0xed, 0xc4, 0xb2,
	0x5d, 0xe1, 0xa6, 0xd6, 0x95, 0x97, 0x53, 0xae, 0x44, 0x12, 0x29, 0x2f, 0x53, 0xbb, 0xd2, 0x06,
	0x92, 0xca, 0x55, 0xbe, 0xa0, 0x20, 0x60, 0x44, 0x62, 0x97, 0xc4, 0x70, 0x67, 0x06, 0xbb, 0x62,
	0x6e, 0x39, 0xe6, 0x4f, 0xe4, 0x92, 0xff, 0x90, 0xca, 0x25, 0xd7, 0xe4, 0x1f, 0xe4, 0xb7, 0xe4,
	0x98, 0xea, 0x1e, 0x00, 0x04, 0x1f, 0x5e, 0xba, 0x5c, 0x3e, 0xe4, 0x90, 0x93, 0x66, 0xbe, 0xe9,
	0x1e, 0xcc, 0xf4, 0x7c, 0x5f, 0x77, 0x53, 0xd0, 0x9e, 0x72, 0xa5, 0xbc, 0x11, 0x57, 0xbd, 0x99,
	0x14, 0x5a, 0xb0, 0xd6, 0x2b, 0x1e, 0x06, 0x7c, 0xea, 0x45, 0x51, 0xcf, 0x9b, 0x85, 0x87, 0xef,
	0x8f, 0x84, 0x18, 0x4d, 0xf8, 0x43, 0x5a, 0xbc, 0x8d, 0xef, 0x1e, 0xea, 0x70, 0xca, 0x95, 0xf6,
	0xa6, 0x33, 0x63, 0x7f, 0xd8, 0xf4, 0x45, 0x74, 0x17, 0x8e, 0xcc, 0xac, 0xfb, 0x67, 0x0b, 0xf6,
	0xce, 0xa4, 0xf7, 0x7a, 0x32, 0xb8, 0xe7, 0x7e, 0xac, 0x43, 0x11, 0x5d, 0x69, 0x4f, 0xc7, 0x8a,
	0xb5, 0xa1, 0x18, 0x06, 0x9d, 0xc2, 0x51, 0xe1, 0xb8, 0xee, 0x14, 0xc3, 0x80, 0xfd, 0x16, 0x2a,
	0x4a, 0x7b, 0x9a, 0x77, 0x8a, 0x47, 0x85, 0xe3, 0xf6, 0xa3, 0x4f, 0x7a, 0x4b, 0x9f, 0xed, 0x6d,
	0xda, 0xa3, 0x87, 0x7f, 0xb8, 0x63, 0xfc, 0xd8, 0x3e, 0x54, 0x9f, 0x8b, 0x5b, 0x37, 0x0c, 0x3a,
	0x25, 0xda, 0xb4, 0xf2, 0x5c, 0xdc, 0x0e, 0x03, 0xf6, 0x16, 0xd4, 0x14, 0xe7, 0x01, 0xe2, 0x65,
	0xc2, 0xab, 0x38, 0x1d, 0x06, 0xec, 0x21, 0x54, 0x94, 0x2f, 0x66, 0xbc, 0x53, 0x39, 0x2a, 0x1c,
	0x37, 0x1e, 0xbd, 0xbd, 0xe9, 0x83, 0x57, 0x68, 0xe0, 0x18, 0x3b, 0xf6, 0x6b, 0x00, 0xa5, 0x3d,
	0xa9, 0x5d, 0xbc, 0x71, 0xa7, 0x4a, 0x5e, 0x87, 0x3d, 0x13, 0x8e, 0x5e, 0x1a, 0x8e, 0xde, 0x75,
	0x1a, 0x0e, 0xa7, 0x4e, 0xd6, 0x38, 0x67, 0x3f, 0x07, 0x8b, 0x47, 0x81, 0x71, 0xac, 0x6d, 0x75,
	0xac, 0xf1, 0x28, 0x20, 0xb7, 0xcf, 0xe0, 0x41, 0x20, 0xfc, 0x78, 0xca, 0x23, 0xad, 0x5c, 0x1f,
	0x0f, 0xc4, 0x83, 0x8e, 0x75, 0x54, 0x38, 0x2e, 0x39, 0x76, 0xb6, 0x70, 0x66, 0x70, 0xf6, 0x21,
	0xb4, 0x6e, 0xe7, 0x9a, 0x2f, 0x0c, 0xeb, 0x64, 0xd8, 0x24, 0x30, 0x35, 0xfa, 0x00, 0x9a, 0xb1,
	0x0c, 0x17, 0x36, 0x40, 0x36, 0x0d, 0xc4, 0x52, 0x93, 0x4f, 0x60, 0xb1, 0xb7, 0x7b, 0xe7, 0x85,
	0x68, 0xd6, 0x20, 0xb3, 0x9d, 0x0c, 0x3f, 0x27, 0x98, 0x7d, 0x0e, 0x07, 0x0b, 0x53, 0x11, 0x6b,
	0x57, 0xdc, 0xb9, 0x26, 0xa6, 0x4d, 0x72, 0xd8, 0xcd, 0x56, 0x2f, 0x63, 0x7d, 0x79, 0x47, 0xd1,
	0x5c, 0xbe, 0x94, 0xe4, 0x5a, 0x86, 0x3c, 0xe8, 0xb4, 0x56, 0x2e, 0xe5, 0x18, 0x7c, 0xf9, 0x30,
	0x01, 0x8f, 0xd0, 0xb6, 0xbd, 0x72, 0x98, 0x3e, 0xc1, 0xac, 0x0f, 0xf6, 0xc4, 0x53, 0xda, 0xf5,
	0xc7, 0x5e, 0x34, 0xe2, 0x26, 0xd6, 0x3b, 0x5b, 0x63, 0xdd, 0x46, 0x9f, 0x33, 0x72, 0xa1, 0x90,
	0x7f, 0x09, 0x4d, 0x5f, 0x72, 0x4f, 0xf3, 0xe4, 0xb5, 0xec, 0xad, 0x3b, 0x34, 0x12, 0x7b, 0x72,
	0xff, 0x08, 0xda, 0x7e, 0x2c, 0x25, 0x8f, 0xb4, 0x1b, 0xcb, 0x10, 0x49, 0xb7, 0x77, 0x54, 0x3a,
	0xae, 0x3b, 0xcd, 0x04, 0xbd, 0x91, 0xe1, 0x30, 0x60, 0xc7, 0x60, 0x23, 0x55, 0x79, 0x4a, 0x67,
	0xb4, 0xdb, 0x27, 0x72, 0xb6, 0x9f, 0x8b, 0xdb, 0x8c, 0xe5, 0xc3, 0x80, 0x7d, 0x0a, 0x15, 0x2e,
	0xa5, 0x90, 0x9d, 0x03, 0x3a, 0xc7, 0xde, 0x0a, 0x49, 0x07, 0xb8, 0xe6, 0x18, 0x93, 0xee, 0x5f,
	0x0a, 0x50, 0x21, 0x45, 0xb0, 0x16, 0xd4, 0x6f, 0x2e, 0xfa, 0x83, 0xf3, 0xe1, 0xc5, 0xa0, 0x6f,
	0xff, 0x88, 0x35, 0xa0, 0x76, 0xe6, 0x0c, 0x4e, 0xae, 0x07, 0x7d, 0xbb, 0xc0, 0x9a, 0x60, 0x9d,
	0x0f, 0xae, 0xcf, 0x1e, 0x0f, 0x2f, 0xbe, 0xb2, 0x8b, 0x38, 0xbb, 0x7a, 0x32, 0x18, 0x3c, 0xc3,
	0x59, 0x89, 0xd6, 0x86, 0x17, 0xc3, 0xab, 0xc7, 0x83, 0xbe, 0x5d, 0x66, 0xbb, 0xb0, 0x73, 0x72,
	0x7a, 0xe9, 0x5c, 0x0f, 0xfa, 0xee, 0xf5, 0xf0, 0xe9, 0xe0, 0xf2, 0xe6, 0xda, 0xae, 0x30, 0x1b,
	0x9a, 0x29, 0x78, 0x35, 0xfc, 0x66, 0x60, 0x57, 0x19, 0x83, 0x76, 0x8a, 0x3c, 0x3d, 0xb9, 0xb8,
	0x39, 0x79, 0x62, 0xd7, 0x18, 0x40, 0xf5, 0xfc, 0x64, 0xf8, 0x64, 0xd0, 0xb7, 0x2d, 0x66, 0x41,
	0xb9, 0x3f, 0x1c, 0xf4, 0xed, 0x7a, 0xf7, 0xef, 0x15, 0x38, 0xdc, 0xa4, 0x63, 0x13, 0xfe, 0x1f,
	0x3e, 0x23, 0xe4, 0x55, 0x57, 0xfe, 0xee, 0xaa, 0x7b, 0x04, 0xfb, 0x5e, 0x10, 0xb8, 0xeb, 0xca,
	0xab, 0x18, 0x52, 0x7b, 0x41, 0xd0, 0x5f, 0x15, 0xdf, 0xa7, 0xf0, 0x00, 0x7d, 0x96, 0x05, 0x58,
	0x35, 0x44, 0xf5, 0x82, 0xe0, 0x34, 0xaf, 0xc1, 0x63, 0xb0, 0xd1, 0x76, 0x49, 0x87, 0x35, 0x32,
	0x6d, 0x7b, 0x41, 0x70, 0x93, 0x93, 0xe2, 0xcf, 0x60, 0x6f, 0xf9, 0x24, 0x89, 0x1c, 0x4d, 0x0a,
	0x60, 0xf9, 0x83, 0x24, 0x8a, 0xfc, 0x02, 0x0e, 0x97, 0x3d, 0x96, 0x54, 0x69, 0x32, 0xc2, 0x41,
	0xde, 0x2f, 0x27, 0xcc, 0xb5, 0x7b, 0xa7, 0xe2, 0x84, 0xf5, 0x7b, 0xa7, 0xfa, 0x5c, 0x3b, 0x61,
	0xa2, 0xd1, 0xc6, 0xfa, 0x09, 0x13, 0x99, 0xfe, 0x0e, 0x30, 0x20, 0x6e, 0x4e, 0x25, 0x94, 0x2c,
	0x1a, 0x8f, 0x3a, 0x2b, 0xef, 0xfb, 0x87, 0x98, 0xc7, 0x1c, 0xc3, 0xe1, 0xb4, 0xbc, 0x20, 0x38,
	0xcb, 0xf4, 0xc3, 0xce, 0x81, 0x05, 0x7c, 0xc2, 0x35, 0x5f, 0xda, 0xa4, 0xb5, 0x65, 0x13, 0xdb,
	0xf8, 0xe4, 0xf6, 0xc9, 0xb4, 0xd5, 0xde, 0xae, 0xad, 0x7f, 0x57, 0x81, 0xfd, 0x3e, 0x27, 0xcd,
	0x6f, 0x29, 0x62, 0x8b, 0x1a, 0x54, 0xcc, 0xd7, 0xa0, 0x2f, 0x53, 0x26, 0x97, 0x88, 0xc9, 0x1f,
	0xaf, 0x7c, 0x69, 0x7d, 0xe3, 0x65, 0x1e, 0x7b, 0x60, 0x67, 0xa9, 0x42, 0xb9, 0x66, 0xa7, 0xf2,
	0x51, 0xe9, 0xb8, 0xf1, 0xe8, 0x17, 0xdb, 0x77, 0xca, 0xe6, 0x8a, 0xf6, 0x1c, 0x44, 0x5a, 0xce,
	0x9d, 0x1d, 0xbe, 0x8c, 0xfe, 0xbf, 0xb6, 0xfd, 0x6f, 0xd7, 0xb6, 0x8c, 0xaa, 0x3b, 0x5b, 0xa9,
	0x7a, 0x78, 0x0a, 0x7b, 0x9b, 0xde, 0x9c, 0xd9, 0x50, 0x7a, 0xc1, 0xe7, 0x09, 0x59, 0x71, 0xc8,
	0xf6, 0xa0, 0xf2, 0xca, 0x9b, 0xc4, 0x26, 0xc1, 0x56, 0x1c, 0x33, 0xf9, 0xa2, 0xf8, 0xab, 0x42,
	0x77, 0xfc, 0x5d, 0x2a, 0x49, 0x03, 0x6a, 0xce, 0xcd, 0xc5, 0x45, 0x56, 0x48, 0xb2, 0xd2, 0x51,
	0xda, 0x50, 0x13, 0xca, 0xb9, 0x9a, 0x50, 0xc9, 0x6a, 0x42, 0xb5, 0xfb, 0xd7, 0x2a, 0x58, 0xf4,
	0x3a, 0x4f, 0xc4, 0x08, 0x7b, 0xb5, 0xd7, 0x9e, 0xf4, 0xdd, 0x4c, 0x53, 0x55, 0x9c, 0x0e, 0x03,
	0xa4, 0x27, 0xf2, 0xcb, 0x25, 0x0e, 0xd1, 0x71, 0xb7, 0xd0, 0x13, 0xad, 0xaf, 0x70, 0xc8, 0x18,
	0x94, 0x55, 0x2c, 0x75, 0xd2, 0x14, 0xd2, 0x98, 0xbd, 0x0f, 0x0d, 0x45, 0xea, 0x70, 0x7d, 0x11,
	0x98, 0xda, 0x50, 0x71, 0xc0, 0x40, 0x67, 0x22, 0xe0, 0xe4, 0x14, 0xfe, 0x91, 0x27, 0x19, 0x9f,
	0xc6, 0xc8, 0x41, 0xc9, 0x5f, 0xc6, 0x5c, 0x61, 0x6f, 0x80, 0x19, 0xa7, 0x4a, 0x3b, 0x36, 0x33,
	0x10, 0x73, 0xca, 0x07, 0xd0, 0x94, 0x5c, 0xcd, 0x44, 0xa4, 0x38, 0xd9, 0xd4, 0xc8, 0xa6, 0x91,
	0x62, 0x68, 0xf2, 0x63, 0x68, 0x07, 0xa1, 0xf2, 0xc5, 0x2b, 0x2e, 0xe7, 0xee, 0xcc, 0xd3, 0x63,
	0x62, 0x7d, 0xdd, 0x69, 0x65, 0xe8, 0x33, 0x4f, 0x8f, 0xd9, 0x21, 0x58, 0x92, 0xdf, 0x71, 0x29,
	0xb9, 0x24, 0xb6, 0xd7, 0x9d, 0x6c, 0x8e, 0x5f, 0xf1, 0x45, 0xa4, 0x31, 0xf5, 0xe9, 0xf9, 0x8c,
	0x13, 0xd3, 0xeb, 0x4e, 0x23, 0xc1, 0xae, 0xe7, 0x33, 0x8e, 0xdd, 0xd0, 0x1d, 0xd7, 0xfe, 0xd8,
	0xcd, 0xc5, 0xad, 0xb1, 0xbd, 0x1b, 0x22, 0x9f, 0xeb, 0x2c, 0x78, 0x5d, 0x68, 0xe5, 0x76, 0x99,
	0xaa, 0x84, 0xfb, 0x8d, 0xcc, 0xec, 0xa9, 0xc2, 0xc3, 0xdc, 0x4e, 0x84, 0xff, 0xc2, 0x0d, 0xc2,
	0x11, 0x57, 0x9a, 0xe8, 0x5e, 0x77, 0x1a, 0x84, 0xf5, 0x09, 0xc2, 0x2b, 0xcf, 0xbc, 0xf9, 0x44,
	0x78, 0x41, 0x6a, 0xd4, 0x36, 0x57, 0x4e, 0xd0, 0xc4, 0x8c, 0x9e, 0x45, 0x48, 0x6f, 0xc4, 0x5d,
	0xc9, 0xef, 0x88, 0xeb, 0x75, 0x7c, 0x16, 0x82, 0x1c, 0x7e, 0x87, 0x06, 0x92, 0xfb, 0x42, 0x06,
	0xe6, 0xda, 0xb6, 0x31, 0x30, 0x10, 0xdd, 0xfa, 0x23, 0x68, 0x13, 0x81, 0x28, 0x52, 0xca, 0xd5,
	0xa2, 0xf3, 0xc0, 0x3c, 0x12, 0xa2, 0x0e, 0x81, 0xd7, 0x82, 0xbd, 0x0b, 0x10, 0xce, 0x5c, 0x2f,
	0x08, 0x24, 0x57, 0xaa, 0xc3, 0xc8, 0xa2, 0x1e, 0xce, 0x4e, 0x0c, 0x80, 0x17, 0x5a, 0xea, 0xcc,
	0x76, 0xcd, 0x85, 0x78, 0xae, 0x2d, 0xeb, 0x40, 0xcd, 0xa8, 0x5b, 0x75, 0xf6, 0x88, 0x3c, 0xe9,
	0x74, 0xa1, 0xd4, 0xfd, 0xad, 0x4a, 0xdd, 0xd8, 0x06, 0x1e, 0x6c, 0x6a, 0x03, 0xbb, 0xff, 0x28,
	0x43, 0xed, 0x99, 0x37, 0xe2, 0x6f, 0x14, 0x89, 0x0d, 0x25, 0xa4, 0x9c, 0xa9, 0x3c, 0x38, 0x5c,
	0xbb, 0x49, 0x69, 0xfd, 0x26, 0x79, 0x9a, 0x95, 0x57, 0x68, 0xb6, 0xe9, 0x7c, 0x95, 0x8d, 0x6d,
	0xea, 0x6f, 0x70, 0x17, 0x25, 0x62, 0xe9, 0x23, 0x19, 0xb1, 0x32, 0xbd, 0xbf, 0x72, 0xf1, 0xe4,
	0xf4, 0x3d, 0x27, 0x31, 0x73, 0x32, 0x07, 0x0c, 0xa6, 0x88, 0xf5, 0x24, 0x8c, 0x5e, 0x74, 0x1a,
	0xd4, 0x2c, 0xa7, 0xd3, 0xc3, 0x7f, 0x16, 0xc1, 0x4a, 0x1d, 0xd2, 0xeb, 0x15, 0x16, 0xd7, 0x7b,
	0x17, 0xe0, 0x4e, 0x8a, 0xa9, 0xeb, 0x7b, 0xfe, 0xd8, 0x24, 0x31, 0xcb, 0xa9, 0x23, 0x72, 0x86,
	0x00, 0x7b, 0x0f, 0x40, 0xf2, 0x28, 0xe0, 0xd2, 0xbb, 0x9d, 0x98, 0xd2, 0x6b, 0x39, 0x39, 0xc4,
	0x08, 0xda, 0x6c, 0x6e, 0xf8, 0x54, 0x4e, 0x05, 0x6d, 0x40, 0x62, 0xd4, 0x3b, 0x50, 0x9f, 0x22,
	0xf7, 0xc9, 0xc0, 0x5c, 0xde, 0x42, 0x80, 0x16, 0x57, 0xf2, 0x48, 0x75, 0x2d, 0x8f, 0xac, 0x6b,
	0xbd, 0xb6, 0x49, 0xeb, 0xb9, 0x27, 0xb5, 0x96, 0x9e, 0xf4, 0x4d, 0x49, 0x20, 0x63, 0x1a, 0x6c,
	0x6f, 0x5f, 0x4e, 0xa0, 0x9d, 0x94, 0xc0, 0x33, 0x93, 0x23, 0xd8, 0x01, 0x54, 0x13, 0x29, 0x26,
	0x24, 0x32, 0xb3, 0xfc, 0x51, 0x8a, 0xf9, 0xa3, 0x74, 0xff, 0x54, 0x84, 0xd6, 0xe0, 0x5e, 0x4b,
	0xcf, 0xc7, 0xdf, 0x3a, 0xfc, 0x5e, 0x7f, 0x3b, 0x11, 0x19, 0x94, 0x35, 0xbf, 0xd7, 0xc9, 0x06,
	0x34, 0xc6, 0x48, 0x28, 0x8e, 0x9f, 0xf6, 0xb9, 0xeb, 0x8b, 0x38, 0x32, 0x09, 0xb9, 0xe4, 0xb4,
	0x52, 0xf4, 0x0c, 0x41, 0x7c, 0xd2, 0xd7, 0xa8, 0x6f, 0x63, 0x52, 0x26, 0x93, 0x3a, 0x22, 0x66,
	0xf9, 0x27, 0xb0, 0x33, 0x11, 0xd1, 0xc8, 0xcd, 0xd9, 0x98, 0x14, 0xdd, 0x42, 0xf8, 0xeb, 0xcc,
	0xee, 0x63, 0xd8, 0xf1, 0xc7, 0x1e, 0x9d, 0x55, 0x26, 0x76, 0xa6, 0x19, 0x6f, 0x67, 0xb0, 0x31,
	0xb4, 0xa1, 0x34, 0x09, 0xef, 0x93, 0xf6, 0x1b, 0x87, 0x18, 0xf2, 0x89, 0x17, 0x8d, 0x62, 0x6f,
	0xc4, 0x93, 0xc7, 0xc8, 0xe6, 0xdd, 0x7f, 0x15, 0x92, 0x38, 0x3e, 0x16, 0x4a, 0x7f, 0x25, 0x45,
	0x3c, 0x5b, 0xeb, 0x00, 0x3f, 0x84, 0xd6, 0x4c, 0x4c, 0x42, 0xcd, 0x23, 0xae, 0xd4, 0x22, 0x8a,
	0xcd, 0x05, 0x38, 0x0c, 0xd8, 0x29, 0xec, 0x44, 0xfc, 0x5e, 0xbb, 0x8b, 0xdc, 0x4a, 0xd1, 0x78,
	0x73, 0x6e, 0x6e, 0xa1, 0xcb, 0x79, 0x9a, 0x78, 0x31, 0xc8, 0xb7, 0xb1, 0x9a, 0x53, 0x8c, 0x2c,
	0x87, 0xc6, 0x28, 0xd8, 0x97, 0xd4, 0xf0, 0xd2, 0x8f, 0xcf, 0x7c, 0x7c, 0xda, 0x2f, 0xd3, 0x46,
	0x98, 0xee, 0xdd, 0x1d, 0x40, 0x85, 0x08, 0x82, 0xdb, 0x10, 0x77, 0x0b, 0xc4, 0x5d, 0x1a, 0x63,
	0x50, 0xa6, 0x6a, 0x94, 0x26, 0x92, 0xa9, 0x1a, 0x11, 0x5b, 0xb8, 0xf6, 0xc2, 0x49, 0x92, 0x42,
	0x92, 0x59, 0xf7, 0x6f, 0x55, 0xa8, 0x67, 0x2d, 0xf6, 0x5a, 0x2c, 0x56, 0xd3, 0x4f, 0x71, 0x3d,
	0xfd, 0x5c, 0xc0, 0x7e, 0x2a, 0x85, 0xe4, 0x17, 0x77, 0x52, 0xab, 0xb6, 0xc7, 0x63, 0x77, 0xe1,
	0xb8, 0x28, 0x58, 0x87, 0x60, 0x29, 0xac, 0xc7, 0x91, 0xcf, 0x13, 0xf6, 0x64, 0xf3, 0x34, 0x81,
	0x54, 0x16, 0x09, 0x24, 0xed, 0x0d, 0xaa, 0xb9, 0xde, 0x00, 0x2f, 0x31, 0x4b, 0x64, 0x5a, 0x0c,
	0x67, 0x3f, 0x44, 0xb9, 0x7e, 0x08, 0x35, 0x5f, 0x88, 0x17, 0x58, 0x2d, 0x4c, 0x72, 0xdc, 0x5f,
	0xfd, 0x29, 0x4b, 0xab, 0x4e, 0x6a, 0xc5, 0x3e, 0x03, 0x36, 0xc3, 0x2a, 0xb8, 0x5c, 0x7b, 0x93,
	0x46, 0x15, 0x57, 0xce, 0x73, 0xf5, 0x37, 0x57, 0x8b, 0x9a, 0xcb, 0xb5, 0xe8, 0x06, 0xde, 0xe6,
	0x9e, 0x9c, 0x84, 0x5c, 0xe5, 0xa9, 0x96, 0x04, 0xb8, 0xb5, 0x35, 0xc0, 0x07, 0xa9, 0xf3, 0xf9,
	0x72, 0x53, 0xf0, 0x53, 0xd8, 0xa5, 0x16, 0xdb, 0x1d, 0x0b, 0xa5, 0xdd, 0x11, 0xca, 0x00, 0x5f,
	0xd7, 0x94, 0x74, 0xdb, 0x5f, 0xd2, 0xc7, 0x70, 0x83, 0x22, 0x76, 0x36, 0x28, 0x22, 0x4b, 0x66,
	0xf6, 0xf7, 0x2b, 0x9b, 0x0f, 0x36, 0x96, 0xa5, 0xf7, 0x00, 0xe2, 0x08, 0xd3, 0xf9, 0xe4, 0x15,
	0x0f, 0xa8, 0xd0, 0x5b, 0x4e, 0x0e, 0x61, 0x97, 0x70, 0x60, 0xe2, 0xb2, 0xf8, 0xed, 0x93, 0x44,
	0x67, 0x77, 0x3b, 0xfd, 0xc8, 0xf3, 0x2a, 0xfd, 0x19, 0x64, 0x42, 0xf3, 0x31, 0xec, 0xcc, 0x64,
	0x28, 0x64, 0xa8, 0xe7, 0xee, 0x6b, 0x1e, 0x8e, 0xc6, 0x9a, 0xfa, 0x83, 0x82, 0xd3, 0x4e, 0xe1,
	0xaf, 0x09, 0xed, 0xfe, 0xa7, 0x00, 0x55, 0xf3, 0xea, 0x48, 0xc2, 0xc8, 0x9b, 0xf2, 0x44, 0x37,
	0x34, 0x5e, 0xee, 0xcc, 0xeb, 0x49, 0x67, 0x4e, 0x2a, 0x14, 0x53, 0x2f, 0x8c, 0x32, 0x15, 0xd2,
	0x0c, 0x77, 0x20, 0x62, 0x9a, 0xfa, 0x45, 0x63, 0x64, 0x05, 0xbf, 0x9f, 0x85, 0x92, 0x2b, 0x22,
	0x7c, 0xc1, 0x49, 0xa7, 0x59, 0x6f, 0x6b, 0xaa, 0x95, 0xe9, 0x6d, 0xdf, 0x81, 0xfa, 0x58, 0xeb,
	0x99, 0x2b, 0xa2, 0xc9, 0x9c, 0xb8, 0x6f, 0x39, 0x16, 0x02, 0x97, 0xd1, 0x64, 0x8e, 0x9f, 0x55,
	0xdc, 0x8f, 0xa5, 0xc9, 0x87, 0x96, 0x93, 0xcc, 0xf0, 0x13, 0x8a, 0x2b, 0x15, 0x8a, 0x88, 0x18,
	0x6f, 0x39, 0xe9, 0x14, 0xb7, 0x53, 0x1e, 0xc6, 0x32, 0xd4, 0x69, 0x73, 0x6a, 0x21, 0x70, 0x15,
	0x6a, 0xde, 0xf5, 0x01, 0xae, 0x7c, 0xc9, 0x79, 0xa4, 0xc6, 0x42, 0x7f, 0x9f, 0x9c, 0x91, 0xe8,
	0xb8, 0xb4, 0xd0, 0xb1, 0x0d, 0xa5, 0x70, 0x3a, 0xa2, 0xfb, 0x37, 0x1d, 0x1c, 0x9e, 0xfe, 0x12,
	0xde, 0x8a, 0x44, 0x2f, 0xba, 0xed, 0x45, 0x91, 0xb7, 0xcc, 0xa5, 0xd3, 0xd6, 0xd3, 0xe4, 0xff,
	0xdb, 0xcf, 0xf0, 0x51, 0xbf, 0x59, 0xfc, 0x7b, 0xdb, 0xf5, 0x66, 0xe1, 0x6d, 0x95, 0x9e, 0xfa,
	0xf3, 0xff, 0x06, 0x00, 0x00, 0xff, 0xff, 0xc4, 0x72, 0xb0, 0xa3, 0x06, 0x17, 0x00, 0x00,
}
